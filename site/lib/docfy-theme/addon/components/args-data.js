export default [{"name":"Button","fileName":"packages/buttons/addon/components/button.ts","args":[{"name":"appearance","type":{"name":"enum","raw":"\"default\" | \"outlined\" | \"minimal\" | \"custom\"","options":["'default'","'outlined'","'minimal'","'custom'"]},"isRequired":false,"description":"The button appearance","tags":{"defaultValue":{"name":"defaultValue","value":"'default'"}},"defaultValue":"'default'","highlightedType":"<span class=\"hljs-string\">'default'</span> | <span class=\"hljs-string\">'outlined'</span> | <span class=\"hljs-string\">'minimal'</span> | <span class=\"hljs-string\">'custom'</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'default'</span>"},{"name":"intent","type":{"name":"enum","raw":"\"primary\" | \"success\" | \"warning\" | \"danger\"","options":["'primary'","'success'","'warning'","'danger'"]},"isRequired":false,"description":"The intent of the button","tags":{},"highlightedType":"<span class=\"hljs-string\">'primary'</span> | <span class=\"hljs-string\">'success'</span> | <span class=\"hljs-string\">'warning'</span> | <span class=\"hljs-string\">'danger'</span>"},{"name":"isRenderless","type":{"name":"boolean"},"isRequired":false,"description":"Disable rendering the button element. It yields an object with classNames instead.","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"size","type":{"name":"enum","raw":"\"xs\" | \"sm\" | \"lg\" | \"xl\"","options":["'xs'","'sm'","'lg'","'xl'"]},"isRequired":false,"description":"The size of the button","tags":{},"highlightedType":"<span class=\"hljs-string\">'xs'</span> | <span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span> | <span class=\"hljs-string\">'xl'</span>"},{"name":"type","type":{"name":"enum","raw":"\"button\" | \"submit\" | \"reset\"","options":["'button'","'submit'","'reset'"]},"isRequired":false,"description":"The HTML type of the button","tags":{"defaultValue":{"name":"defaultValue","value":"'button'"}},"defaultValue":"'button'","highlightedType":"<span class=\"hljs-string\">'button'</span> | <span class=\"hljs-string\">'submit'</span> | <span class=\"hljs-string\">'reset'</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'button'</span>"}],"description":"","tags":{}},{"name":"CloseButton","fileName":"packages/core/addon/components/close-button.ts","args":[{"name":"onClick","type":{"name":"(event: Event) => void"},"isRequired":false,"description":"The function to call when button is clicked","tags":{},"highlightedType":"(event: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"size","type":{"name":"enum","raw":"\"xs\" | \"sm\" | \"lg\" | \"xl\" | \"md\"","options":["'xs'","'sm'","'lg'","'xl'","'md'"]},"isRequired":false,"description":"The icon size","tags":{"defaultValue":{"name":"defaultValue","value":"'lg'"}},"defaultValue":"'lg'","highlightedType":"<span class=\"hljs-string\">'xs'</span> | <span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span> | <span class=\"hljs-string\">'xl'</span> | <span class=\"hljs-string\">'md'</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'lg'</span>"}],"description":"","tags":{}},{"name":"VisuallyHidden","fileName":"packages/core/addon/components/visually-hidden.ts","args":[],"description":"","tags":{}},{"name":"FormCheckboxGroup","fileName":"packages/forms/addon/components/form-checkbox-group.ts","args":[{"name":"containerClass","type":{"name":"string"},"isRequired":false,"description":"CSS classes to be added in the container element","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"enum","raw":"string | string[]","options":["string","string[]"]},"isRequired":false,"description":"A list of errors or a single text describing the error","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">string</span>[]"},{"name":"hasError","type":{"name":"boolean"},"isRequired":false,"description":"If has errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hasSubmitted","type":{"name":"boolean"},"isRequired":false,"description":"If the form has been submitted, used to force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hint","type":{"name":"string"},"isRequired":false,"description":"A help text to be displayed","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"isInline","type":{"name":"boolean"},"isRequired":false,"description":"If the Checkbox should be in one line","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"label","type":{"name":"string"},"isRequired":false,"description":"The group label","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"onChange","type":{"name":"(value: unknown, event: Event) => void"},"isRequired":false,"description":"Default callback added to the yielded FormCheckbox component, called when onchange is triggered","tags":{},"highlightedType":"(value: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"showError","type":{"name":"boolean"},"isRequired":false,"description":"Force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"The size","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"}],"description":"","tags":{}},{"name":"FormCheckbox","fileName":"packages/forms/addon/components/form-checkbox.ts","args":[{"name":"checked","type":{"name":"boolean"},"isRequired":true,"description":"If the checkbox is checked.\nYou must also pass `onChange` to update its value.","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"onChange","type":{"name":"(value: boolean, event: Event) => void"},"isRequired":true,"description":"Callback when onchange is triggered","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">boolean</span>, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"containerClass","type":{"name":"string"},"isRequired":false,"description":"CSS classes to be added in the container element","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"hint","type":{"name":"string"},"isRequired":false,"description":"A help text to be displayed","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"label","type":{"name":"string"},"isRequired":false,"description":"The input field label","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"name","type":{"name":"string"},"isRequired":false,"description":"The name of the checkbox","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"The size","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"},{"name":"_parentOnChange","type":{"name":"(value: boolean, event: Event) => void"},"isRequired":false,"description":"Internal function for InputCheckboxGroup","tags":{"ignore":{"name":"ignore","value":""}},"highlightedType":"(value: <span class=\"hljs-built_in\">boolean</span>, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"}],"description":"","tags":{}},{"name":"FormInputBase","fileName":"packages/forms/addon/components/form-input.ts","args":[{"name":"value","type":{"name":"unknown"},"isRequired":true,"description":"The value to be used in the input.\nYou must also pass `onChange` or `onInput` to update its value.","tags":{},"highlightedType":"unknown"},{"name":"containerClass","type":{"name":"string"},"isRequired":false,"description":"CSS classes to be added in the container element","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"enum","raw":"string | string[]","options":["string","string[]"]},"isRequired":false,"description":"A list of errors or a single text describing the error","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">string</span>[]"},{"name":"hasError","type":{"name":"boolean"},"isRequired":false,"description":"If has errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hasSubmitted","type":{"name":"boolean"},"isRequired":false,"description":"If the form has been submitted, used to force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hint","type":{"name":"string"},"isRequired":false,"description":"A help text to be displayed","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"label","type":{"name":"string"},"isRequired":false,"description":"The group label","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"onChange","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"Callback when onchange is triggered","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onFocusIn","type":{"name":"(event: FocusEvent) => void"},"isRequired":false,"description":"Callback when onfocus is triggered","tags":{},"highlightedType":"(event: FocusEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onFocusOut","type":{"name":"(event: FocusEvent) => void"},"isRequired":false,"description":"Callback when onblur is triggered","tags":{},"highlightedType":"(event: FocusEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onInput","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"Callback when oninput is triggered","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"showError","type":{"name":"boolean"},"isRequired":false,"description":"Force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"The size","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"},{"name":"type","type":{"name":"string"},"isRequired":false,"description":"The input type","tags":{"defaultValue":{"name":"defaultValue","value":"'text'"}},"defaultValue":"'text'","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'text'</span>"}],"description":"","tags":{}},{"name":"FormInput","fileName":"packages/forms/addon/components/form-input.ts","args":[{"name":"value","type":{"name":"unknown"},"isRequired":true,"description":"The value to be used in the input.\nYou must also pass `onChange` or `onInput` to update its value.","tags":{},"highlightedType":"unknown"},{"name":"containerClass","type":{"name":"string"},"isRequired":false,"description":"CSS classes to be added in the container element","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"enum","raw":"string | string[]","options":["string","string[]"]},"isRequired":false,"description":"A list of errors or a single text describing the error","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">string</span>[]"},{"name":"hasError","type":{"name":"boolean"},"isRequired":false,"description":"If has errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hasSubmitted","type":{"name":"boolean"},"isRequired":false,"description":"If the form has been submitted, used to force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hint","type":{"name":"string"},"isRequired":false,"description":"A help text to be displayed","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"label","type":{"name":"string"},"isRequired":false,"description":"The group label","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"onChange","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"Callback when onchange is triggered","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onFocusIn","type":{"name":"(event: FocusEvent) => void"},"isRequired":false,"description":"Callback when onfocus is triggered","tags":{},"highlightedType":"(event: FocusEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onFocusOut","type":{"name":"(event: FocusEvent) => void"},"isRequired":false,"description":"Callback when onblur is triggered","tags":{},"highlightedType":"(event: FocusEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onInput","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"Callback when oninput is triggered","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"showError","type":{"name":"boolean"},"isRequired":false,"description":"Force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"The size","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"},{"name":"type","type":{"name":"string"},"isRequired":false,"description":"The input type","tags":{"defaultValue":{"name":"defaultValue","value":"'text'"}},"defaultValue":"'text'","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'text'</span>"}],"description":"","tags":{}},{"name":"FormRadioGroup","fileName":"packages/forms/addon/components/form-radio-group.ts","args":[{"name":"value","type":{"name":"unknown"},"isRequired":true,"description":"","tags":{},"highlightedType":"unknown"},{"name":"containerClass","type":{"name":"string"},"isRequired":false,"description":"CSS classes to be added in the container element","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"enum","raw":"string | string[]","options":["string","string[]"]},"isRequired":false,"description":"A list of errors or a single text describing the error","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">string</span>[]"},{"name":"hasError","type":{"name":"boolean"},"isRequired":false,"description":"If has errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hasSubmitted","type":{"name":"boolean"},"isRequired":false,"description":"If the form has been submitted, used to force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hint","type":{"name":"string"},"isRequired":false,"description":"A help text to be displayed","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"isInline","type":{"name":"boolean"},"isRequired":false,"description":"If the Checkbox should be in one line","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"label","type":{"name":"string"},"isRequired":false,"description":"The group label","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"onChange","type":{"name":"(value: unknown, event: Event) => void"},"isRequired":false,"description":"Default callback added to the yielded FormRadio component, called when onchange is triggered","tags":{},"highlightedType":"(value: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"showError","type":{"name":"boolean"},"isRequired":false,"description":"Force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"The size","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"}],"description":"","tags":{}},{"name":"FormRadio","fileName":"packages/forms/addon/components/form-radio.ts","args":[{"name":"checked","type":{"name":"unknown"},"isRequired":true,"description":"The current checked value.\nThis will be used to compare against the `value` argument,\nif equal, the radio will me marked as checked.","tags":{},"highlightedType":"unknown"},{"name":"onChange","type":{"name":"(value: unknown, event: Event) => void"},"isRequired":true,"description":"Callback when onchange is triggered","tags":{},"highlightedType":"(value: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"value","type":{"name":"unknown"},"isRequired":true,"description":"The value to be used in the radio button.\nYou must also pass `onChange` to update its value.","tags":{},"highlightedType":"unknown"},{"name":"containerClass","type":{"name":"string"},"isRequired":false,"description":"CSS classes to be added in the container element","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"hint","type":{"name":"string"},"isRequired":false,"description":"A help text to be displayed","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"label","type":{"name":"string"},"isRequired":false,"description":"The input field label","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"name","type":{"name":"string"},"isRequired":false,"description":"The name of the checkbox","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"The size","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"},{"name":"_parentOnChange","type":{"name":"(value: unknown, event: Event) => void"},"isRequired":false,"description":"Internal function for InputRadioGroup","tags":{"ignore":{"name":"ignore","value":""}},"highlightedType":"(value: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"}],"description":"","tags":{}},{"name":"FormSelect","fileName":"packages/forms/addon/components/form-select.ts","args":[{"name":"onChange","type":{"name":"(selection: any, select: Select, event?: Event) => void"},"isRequired":true,"description":"","tags":{},"highlightedType":"(selection: <span class=\"hljs-built_in\">any</span>, <span class=\"hljs-attr\">select</span>: Select, event?: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"options","type":{"name":"enum","raw":"any[] | PromiseProxy<any[]>","options":["any[]","PromiseProxy<any[]>"]},"isRequired":true,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">any</span>[] | PromiseProxy&#x3C;<span class=\"hljs-built_in\">any</span>[]>"},{"name":"selected","type":{"name":"any"},"isRequired":true,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">any</span>"},{"name":"beforeOptionsComponent","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"buildSelection","type":{"name":"(selected: any, select: Select) => any"},"isRequired":false,"description":"","tags":{},"highlightedType":"(selected: <span class=\"hljs-built_in\">any</span>, <span class=\"hljs-attr\">select</span>: Select) => <span class=\"hljs-built_in\">any</span>"},{"name":"closeOnSelect","type":{"name":"boolean"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"containerClass","type":{"name":"string"},"isRequired":false,"description":"CSS classes to be added in the container element","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"defaultHighlighted","type":{"name":"any"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">any</span>"},{"name":"errors","type":{"name":"enum","raw":"string | string[]","options":["string","string[]"]},"isRequired":false,"description":"A list of errors or a single text describing the error","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">string</span>[]"},{"name":"groupComponent","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"hasError","type":{"name":"boolean"},"isRequired":false,"description":"If has errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hasSubmitted","type":{"name":"boolean"},"isRequired":false,"description":"If the form has been submitted, used to force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"highlightOnHover","type":{"name":"boolean"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hint","type":{"name":"string"},"isRequired":false,"description":"A help text to be displayed","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"initiallyOpened","type":{"name":"boolean"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"label","type":{"name":"string"},"isRequired":false,"description":"The input field label","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"matcher","type":{"name":"MatcherFn"},"isRequired":false,"description":"","tags":{},"highlightedType":"MatcherFn"},{"name":"matchTriggerWidth","type":{"name":"boolean"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"noMatchesMessage","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"noMatchesMessageComponent","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"onBlur","type":{"name":"(select: Select, event: FocusEvent) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(select: Select, <span class=\"hljs-attr\">event</span>: FocusEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onClose","type":{"name":"(select: Select, e: Event) => boolean"},"isRequired":false,"description":"","tags":{},"highlightedType":"(select: Select, <span class=\"hljs-attr\">e</span>: Event) => <span class=\"hljs-built_in\">boolean</span>"},{"name":"onFocus","type":{"name":"(select: Select, event: FocusEvent) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(select: Select, <span class=\"hljs-attr\">event</span>: FocusEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onFocusIn","type":{"name":"(select: Select, event: FocusEvent) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(select: Select, <span class=\"hljs-attr\">event</span>: FocusEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onFocusOut","type":{"name":"(select: Select, event: FocusEvent) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(select: Select, <span class=\"hljs-attr\">event</span>: FocusEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onInput","type":{"name":"(term: string, select: Select, e: Event) => string | false | void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(term: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">select</span>: Select, <span class=\"hljs-attr\">e</span>: Event) => <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">false</span> | <span class=\"hljs-built_in\">void</span>"},{"name":"onKeydown","type":{"name":"(select: Select, e: KeyboardEvent) => boolean"},"isRequired":false,"description":"","tags":{},"highlightedType":"(select: Select, <span class=\"hljs-attr\">e</span>: KeyboardEvent) => <span class=\"hljs-built_in\">boolean</span>"},{"name":"onOpen","type":{"name":"(select: Select, e: Event) => boolean"},"isRequired":false,"description":"","tags":{},"highlightedType":"(select: Select, <span class=\"hljs-attr\">e</span>: Event) => <span class=\"hljs-built_in\">boolean</span>"},{"name":"optionsComponent","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"placeholderComponent","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"registerAPI","type":{"name":"(select: Select) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(select: Select) => <span class=\"hljs-built_in\">void</span>"},{"name":"scrollTo","type":{"name":"(option: any, select: Select) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(option: <span class=\"hljs-built_in\">any</span>, <span class=\"hljs-attr\">select</span>: Select) => <span class=\"hljs-built_in\">void</span>"},{"name":"search","type":{"name":"(term: string, select: Select) => any[] | PromiseProxy<any[]>"},"isRequired":false,"description":"","tags":{},"highlightedType":"(term: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">select</span>: Select) => <span class=\"hljs-built_in\">any</span>[] | PromiseProxy&#x3C;<span class=\"hljs-built_in\">any</span>[]>"},{"name":"searchEnabled","type":{"name":"boolean"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"searchField","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"searchMessage","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"searchMessageComponent","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"showError","type":{"name":"boolean"},"isRequired":false,"description":"Force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"The size","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"},{"name":"tabindex","type":{"name":"enum","raw":"string | number","options":["string","number"]},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">number</span>"},{"name":"triggerComponent","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"typeAheadOptionMatcher","type":{"name":"MatcherFn"},"isRequired":false,"description":"","tags":{},"highlightedType":"MatcherFn"}],"description":"","tags":{}},{"name":"FormTextarea","fileName":"packages/forms/addon/components/form-textarea.ts","args":[{"name":"value","type":{"name":"unknown"},"isRequired":true,"description":"The value to be used in the input.\nYou must also pass `onChange` or `onInput` to update its value.","tags":{},"highlightedType":"unknown"},{"name":"containerClass","type":{"name":"string"},"isRequired":false,"description":"CSS classes to be added in the container element","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"enum","raw":"string | string[]","options":["string","string[]"]},"isRequired":false,"description":"A list of errors or a single text describing the error","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">string</span>[]"},{"name":"hasError","type":{"name":"boolean"},"isRequired":false,"description":"If has errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hasSubmitted","type":{"name":"boolean"},"isRequired":false,"description":"If the form has been submitted, used to force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"hint","type":{"name":"string"},"isRequired":false,"description":"A help text to be displayed","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"label","type":{"name":"string"},"isRequired":false,"description":"The group label","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"onChange","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"Callback when onchange is triggered","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onFocusIn","type":{"name":"(event: FocusEvent) => void"},"isRequired":false,"description":"Callback when onfocus is triggered","tags":{},"highlightedType":"(event: FocusEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onFocusOut","type":{"name":"(event: FocusEvent) => void"},"isRequired":false,"description":"Callback when onblur is triggered","tags":{},"highlightedType":"(event: FocusEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onInput","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"Callback when oninput is triggered","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"showError","type":{"name":"boolean"},"isRequired":false,"description":"Force displaying errors","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"The size","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"},{"name":"type","type":{"name":"string"},"isRequired":false,"description":"The input type","tags":{"defaultValue":{"name":"defaultValue","value":"'text'"}},"defaultValue":"'text'","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'text'</span>"}],"description":"","tags":{}},{"name":"NotificationCard","fileName":"packages/notifications/addon/components/notification-card.ts","args":[{"name":"notification","type":{"name":"Notification"},"isRequired":true,"description":"","tags":{},"highlightedType":"Notification"},{"name":"placement","type":{"name":"enum","raw":"\"top-left\" | \"top-center\" | \"top-right\" | \"bottom-left\" | \"bottom-center\" | \"bottom-right\"","options":["'top-left'","'top-center'","'top-right'","'bottom-left'","'bottom-center'","'bottom-right'"]},"isRequired":true,"description":"","tags":{},"highlightedType":"<span class=\"hljs-string\">'top-left'</span> | <span class=\"hljs-string\">'top-center'</span> | <span class=\"hljs-string\">'top-right'</span> | <span class=\"hljs-string\">'bottom-left'</span> | <span class=\"hljs-string\">'bottom-center'</span> | <span class=\"hljs-string\">'bottom-right'</span>"},{"name":"spacing","type":{"name":"number"},"isRequired":false,"description":"Spacing for each notification, in px.","tags":{"defaultValue":{"name":"defaultValue","value":"16"}},"defaultValue":"16","highlightedType":"<span class=\"hljs-built_in\">number</span>","highlightedDefaultValue":"<span class=\"hljs-number\">16</span>"}],"description":"","tags":{}},{"name":"NotificationsContainer","fileName":"packages/notifications/addon/components/notifications-container.ts","args":[{"name":"placement","type":{"name":"enum","raw":"\"top-left\" | \"top-center\" | \"top-right\" | \"bottom-left\" | \"bottom-center\" | \"bottom-right\"","options":["'top-left'","'top-center'","'top-right'","'bottom-left'","'bottom-center'","'bottom-right'"]},"isRequired":false,"description":"The placement of the notifications","tags":{"defaultValue":{"name":"defaultValue","value":"'bottom-right'"}},"defaultValue":"'bottom-right'","highlightedType":"<span class=\"hljs-string\">'top-left'</span> | <span class=\"hljs-string\">'top-center'</span> | <span class=\"hljs-string\">'top-right'</span> | <span class=\"hljs-string\">'bottom-left'</span> | <span class=\"hljs-string\">'bottom-center'</span> | <span class=\"hljs-string\">'bottom-right'</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'bottom-right'</span>"},{"name":"spacing","type":{"name":"number"},"isRequired":false,"description":"Spacing for each notification, in px.","tags":{"defaultValue":{"name":"defaultValue","value":"16"}},"defaultValue":"16","highlightedType":"<span class=\"hljs-built_in\">number</span>","highlightedDefaultValue":"<span class=\"hljs-number\">16</span>"}],"description":"","tags":{}},{"name":"Overlay","fileName":"packages/overlays/addon/components/overlay.ts","args":[{"name":"isOpen","type":{"name":"boolean"},"isRequired":true,"description":"Whether it is open or not","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"backdropTransitionName","type":{"name":"string"},"isRequired":false,"description":"The name of the transition to be used in the backdrop.","tags":{"defaultValue":{"name":"defaultValue","value":"'overlay-transition--fade'"}},"defaultValue":"'overlay-transition--fade'","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'overlay-transition--fade'</span>"},{"name":"closeOnEscapeKey","type":{"name":"boolean"},"isRequired":false,"description":"Whether to close when the escape key is pressed","tags":{"defaultValue":{"name":"defaultValue","value":"true"}},"defaultValue":"true","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">true</span>"},{"name":"closeOnOutsideClick","type":{"name":"boolean"},"isRequired":false,"description":"Whether to close when the area outside (the backdrop) is clicked","tags":{"defaultValue":{"name":"defaultValue","value":"true"}},"defaultValue":"true","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">true</span>"},{"name":"contentTransitionName","type":{"name":"string"},"isRequired":false,"description":"The name of the transition to be used in the content.","tags":{"defaultValue":{"name":"defaultValue","value":"'overlay-transition--fade'"}},"defaultValue":"'overlay-transition--fade'","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'overlay-transition--fade'</span>"},{"name":"destinationElementId","type":{"name":"string"},"isRequired":false,"description":"The destination where the overlay will be inserted, defaults to\n`document.body`","tags":{"defaultValue":{"name":"defaultValue","value":"undefined"}},"defaultValue":"undefined","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">undefined</span>"},{"name":"didClose","type":{"name":"() => void"},"isRequired":false,"description":"A function that will be called when closing is finished executing, this\nincludes waiting for animations/transitions to finish.","tags":{},"highlightedType":"() => <span class=\"hljs-built_in\">void</span>"},{"name":"disableBackdrop","type":{"name":"boolean"},"isRequired":false,"description":"Whether to hide the backdrop or not","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"disableFocusTrap","type":{"name":"boolean"},"isRequired":false,"description":"Whether the focus trap is disabled or not","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"disableTransitions","type":{"name":"boolean"},"isRequired":false,"description":"Disable css transitions","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"focusTrapOptions","type":{"name":"unknown"},"isRequired":false,"description":"Focus trap options","tags":{"defaultValue":{"name":"defaultValue","value":"{ allowOutsideClick: true }"}},"defaultValue":"{ allowOutsideClick: true }","highlightedType":"unknown","highlightedDefaultValue":"{ <span class=\"hljs-attr\">allowOutsideClick</span>: <span class=\"hljs-literal\">true</span> }"},{"name":"onClose","type":{"name":"() => void"},"isRequired":false,"description":"A function that will be called when closed","tags":{},"highlightedType":"() => <span class=\"hljs-built_in\">void</span>"},{"name":"onOpen","type":{"name":"() => void"},"isRequired":false,"description":"A function that will be called when opened","tags":{},"highlightedType":"() => <span class=\"hljs-built_in\">void</span>"},{"name":"renderInPlace","type":{"name":"boolean"},"isRequired":false,"description":"Whether to render in place or in the specified/default destination","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"transitionDuration","type":{"name":"number"},"isRequired":false,"description":"Duration of the animation","tags":{"defaultValue":{"name":"defaultValue","value":"200"}},"defaultValue":"200","highlightedType":"<span class=\"hljs-built_in\">number</span>","highlightedDefaultValue":"<span class=\"hljs-number\">200</span>"}],"description":"","tags":{}},{"name":"ChangesetForm","fileName":"packages/changeset-form/addon/components/changeset-form/index.ts","args":[{"name":"changeset","type":{"name":"BufferedChangeset"},"isRequired":true,"description":"Changeset Object","tags":{},"highlightedType":"BufferedChangeset"},{"name":"alwaysShowErrors","type":{"name":"boolean"},"isRequired":false,"description":"Always show errors if there are any","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"onReset","type":{"name":"(data: unknown, event: Event) => void"},"isRequired":false,"description":"Callback exeuted when from `onreset` event is triggered","tags":{},"highlightedType":"(data: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"onSubmit","type":{"name":"(data: unknown, event: Event) => void"},"isRequired":false,"description":"Callback exeuted when from `onsubmit` event is triggered","tags":{},"highlightedType":"(data: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"runExecuteInsteadOfSave","type":{"name":"boolean"},"isRequired":false,"description":"Run Changeset execute method instead of save","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"validateOnInit","type":{"name":"boolean"},"isRequired":false,"description":"Validate the changeset on initialization","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"}],"description":"","tags":{}},{"name":"Collapsible","fileName":"packages/core/addon/components/collapsible/index.ts","args":[{"name":"isOpen","type":{"name":"boolean"},"isRequired":true,"description":"If true, the content will be visible","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"initialHeight","type":{"name":"string"},"isRequired":false,"description":"The height for the content in it's collapsed state.\nThe unit of the value should be included, eg. '10px'.","tags":{"defaultValue":{"name":"defaultValue","value":"0"}},"defaultValue":"0","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-number\">0</span>"}],"description":"","tags":{}},{"name":"FormFieldCheckbox","fileName":"packages/forms/addon/components/form-field/checkbox.ts","args":[{"name":"checked","type":{"name":"boolean"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"name","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"onChange","type":{"name":"(value: boolean, event: Event) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">boolean</span>, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"}],"description":"","tags":{}},{"name":"FormFieldFeedback","fileName":"packages/forms/addon/components/form-field/feedback.ts","args":[{"name":"errors","type":{"name":"enum","raw":"string | string[]","options":["string","string[]"]},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">string</span>[]"},{"name":"isError","type":{"name":"boolean"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"}],"description":"","tags":{}},{"name":"FormFieldHint","fileName":"packages/forms/addon/components/form-field/hint.ts","args":[{"name":"id","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"}],"description":"","tags":{}},{"name":"FormField","fileName":"packages/forms/addon/components/form-field/index.ts","args":[{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"}],"description":"","tags":{}},{"name":"FormFieldInput","fileName":"packages/forms/addon/components/form-field/input.ts","args":[{"name":"id","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"onChange","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onInput","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"},{"name":"type","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"}],"description":"","tags":{}},{"name":"FormFieldLabel","fileName":"packages/forms/addon/components/form-field/label.ts","args":[{"name":"for","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"}],"description":"","tags":{}},{"name":"FormFieldRadio","fileName":"packages/forms/addon/components/form-field/radio.ts","args":[{"name":"checked","type":{"name":"unknown"},"isRequired":false,"description":"","tags":{},"highlightedType":"unknown"},{"name":"name","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"onChange","type":{"name":"(value: unknown, event: Event) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"},{"name":"value","type":{"name":"unknown"},"isRequired":false,"description":"","tags":{},"highlightedType":"unknown"}],"description":"","tags":{}},{"name":"FormFieldTextarea","fileName":"packages/forms/addon/components/form-field/textarea.ts","args":[{"name":"id","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"onChange","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"onInput","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"},{"name":"size","type":{"name":"enum","raw":"\"sm\" | \"lg\"","options":["'sm'","'lg'"]},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span>"}],"description":"","tags":{}},{"name":"DrawerBody","fileName":"packages/overlays/addon/components/drawer/body.ts","args":[],"description":"","tags":{}},{"name":"DrawerFooter","fileName":"packages/overlays/addon/components/drawer/footer.ts","args":[],"description":"","tags":{}},{"name":"DrawerHeader","fileName":"packages/overlays/addon/components/drawer/header.ts","args":[{"name":"labelledById","type":{"name":"string"},"isRequired":true,"description":"The id used to reference labelledById in Drawer component","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"}],"description":"","tags":{}},{"name":"Drawer","fileName":"packages/overlays/addon/components/drawer/index.ts","args":[{"name":"isOpen","type":{"name":"boolean"},"isRequired":true,"description":"Whether it is open or not","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"allowCloseButton","type":{"name":"boolean"},"isRequired":false,"description":"If set to false, the close button will not be displayed.","tags":{"defaultValue":{"name":"defaultValue","value":"true"}},"defaultValue":"true","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">true</span>"},{"name":"allowClosing","type":{"name":"boolean"},"isRequired":false,"description":"If set to false, the close button will not be displayed,\ncloseOnOutsideClick will be set to false, and closeOnEscapeKey will also be set\nto false.","tags":{"defaultValue":{"name":"defaultValue","value":"true"}},"defaultValue":"true","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">true</span>"},{"name":"backdropTransitionName","type":{"name":"string"},"isRequired":false,"description":"The name of the transition to be used in the backdrop.","tags":{"defaultValue":{"name":"defaultValue","value":"'overlay-transition--fade'"}},"defaultValue":"'overlay-transition--fade'","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'overlay-transition--fade'</span>"},{"name":"closeButtonSize","type":{"name":"enum","raw":"\"xs\" | \"sm\" | \"lg\" | \"xl\" | \"md\"","options":["'xs'","'sm'","'lg'","'xl'","'md'"]},"isRequired":false,"description":"The Close Button size.","tags":{},"highlightedType":"<span class=\"hljs-string\">'xs'</span> | <span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span> | <span class=\"hljs-string\">'xl'</span> | <span class=\"hljs-string\">'md'</span>"},{"name":"closeOnEscapeKey","type":{"name":"boolean"},"isRequired":false,"description":"Whether to close when the escape key is pressed","tags":{"defaultValue":{"name":"defaultValue","value":"true"}},"defaultValue":"true","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">true</span>"},{"name":"closeOnOutsideClick","type":{"name":"boolean"},"isRequired":false,"description":"Whether to close when the area outside (the backdrop) is clicked","tags":{"defaultValue":{"name":"defaultValue","value":"true"}},"defaultValue":"true","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">true</span>"},{"name":"destinationElementId","type":{"name":"string"},"isRequired":false,"description":"The destination where the overlay will be inserted, defaults to\n`document.body`","tags":{"defaultValue":{"name":"defaultValue","value":"undefined"}},"defaultValue":"undefined","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">undefined</span>"},{"name":"didClose","type":{"name":"() => void"},"isRequired":false,"description":"A function that will be called when closing is finished executing, this\nincludes waiting for animations/transitions to finish.","tags":{},"highlightedType":"() => <span class=\"hljs-built_in\">void</span>"},{"name":"disableBackdrop","type":{"name":"boolean"},"isRequired":false,"description":"Whether to hide the backdrop or not","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"disableFocusTrap","type":{"name":"boolean"},"isRequired":false,"description":"Whether the focus trap is disabled or not","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"disableTransitions","type":{"name":"boolean"},"isRequired":false,"description":"Disable css transitions","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"focusTrapOptions","type":{"name":"unknown"},"isRequired":false,"description":"Focus trap options","tags":{"defaultValue":{"name":"defaultValue","value":"{ allowOutsideClick: true }"}},"defaultValue":"{ allowOutsideClick: true }","highlightedType":"unknown","highlightedDefaultValue":"{ <span class=\"hljs-attr\">allowOutsideClick</span>: <span class=\"hljs-literal\">true</span> }"},{"name":"onClose","type":{"name":"() => void"},"isRequired":false,"description":"A function that will be called when closed","tags":{},"highlightedType":"() => <span class=\"hljs-built_in\">void</span>"},{"name":"onOpen","type":{"name":"() => void"},"isRequired":false,"description":"A function that will be called when opened","tags":{},"highlightedType":"() => <span class=\"hljs-built_in\">void</span>"},{"name":"placement","type":{"name":"enum","raw":"\"top\" | \"bottom\" | \"left\" | \"right\"","options":["'top'","'bottom'","'left'","'right'"]},"isRequired":false,"description":"The Drawer can appear from any side of the screen. The 'placement'\noption allows to choose where it appears from.","tags":{"defaultValue":{"name":"defaultValue","value":"'right'"}},"defaultValue":"'right'","highlightedType":"<span class=\"hljs-string\">'top'</span> | <span class=\"hljs-string\">'bottom'</span> | <span class=\"hljs-string\">'left'</span> | <span class=\"hljs-string\">'right'</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'right'</span>"},{"name":"renderInPlace","type":{"name":"boolean"},"isRequired":false,"description":"Whether to render in place or in the specified/default destination","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"size","type":{"name":"enum","raw":"\"xs\" | \"sm\" | \"lg\" | \"xl\" | \"md\" | \"full\"","options":["'xs'","'sm'","'lg'","'xl'","'md'","'full'"]},"isRequired":false,"description":"The Drawer size.","tags":{"defaultValue":{"name":"defaultValue","value":"'md'"}},"defaultValue":"'md'","highlightedType":"<span class=\"hljs-string\">'xs'</span> | <span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span> | <span class=\"hljs-string\">'xl'</span> | <span class=\"hljs-string\">'md'</span> | <span class=\"hljs-string\">'full'</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'md'</span>"},{"name":"transitionDuration","type":{"name":"number"},"isRequired":false,"description":"Duration of the animation","tags":{"defaultValue":{"name":"defaultValue","value":"200"}},"defaultValue":"200","highlightedType":"<span class=\"hljs-built_in\">number</span>","highlightedDefaultValue":"<span class=\"hljs-number\">200</span>"},{"name":"transitionName","type":{"name":"string"},"isRequired":false,"description":"The name of the transition to be used in the modal.","tags":{"defaultValue":{"name":"defaultValue","value":"'overlay-transition--slide-from-[placement]'"}},"defaultValue":"'overlay-transition--slide-from-[placement]'","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'overlay-transition--slide-from-[placement]'</span>"}],"description":"","tags":{}},{"name":"ModalBody","fileName":"packages/overlays/addon/components/modal/body.ts","args":[],"description":"","tags":{}},{"name":"ModalFooter","fileName":"packages/overlays/addon/components/modal/footer.ts","args":[],"description":"","tags":{}},{"name":"ModalHeader","fileName":"packages/overlays/addon/components/modal/header.ts","args":[{"name":"labelledById","type":{"name":"string"},"isRequired":true,"description":"The id used to reference labelledById in Modal component","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"}],"description":"","tags":{}},{"name":"Modal","fileName":"packages/overlays/addon/components/modal/index.ts","args":[{"name":"isOpen","type":{"name":"boolean"},"isRequired":true,"description":"Whether it is open or not","tags":{},"highlightedType":"<span class=\"hljs-built_in\">boolean</span>"},{"name":"allowCloseButton","type":{"name":"boolean"},"isRequired":false,"description":"If set to false, the close button will not be displayed.","tags":{"defaultValue":{"name":"defaultValue","value":"true"}},"defaultValue":"true","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">true</span>"},{"name":"allowClosing","type":{"name":"boolean"},"isRequired":false,"description":"If set to false, the close button will not be displayed,\ncloseOnOutsideClick will be set to false, and closeOnEscapeKey will also be set\nto false.","tags":{"defaultValue":{"name":"defaultValue","value":"true"}},"defaultValue":"true","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">true</span>"},{"name":"backdropTransitionName","type":{"name":"string"},"isRequired":false,"description":"The name of the transition to be used in the backdrop.","tags":{"defaultValue":{"name":"defaultValue","value":"'overlay-transition--fade'"}},"defaultValue":"'overlay-transition--fade'","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'overlay-transition--fade'</span>"},{"name":"closeButtonSize","type":{"name":"enum","raw":"\"xs\" | \"sm\" | \"lg\" | \"xl\" | \"md\"","options":["'xs'","'sm'","'lg'","'xl'","'md'"]},"isRequired":false,"description":"The Close Button size.","tags":{},"highlightedType":"<span class=\"hljs-string\">'xs'</span> | <span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span> | <span class=\"hljs-string\">'xl'</span> | <span class=\"hljs-string\">'md'</span>"},{"name":"closeOnEscapeKey","type":{"name":"boolean"},"isRequired":false,"description":"Whether to close when the escape key is pressed","tags":{"defaultValue":{"name":"defaultValue","value":"true"}},"defaultValue":"true","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">true</span>"},{"name":"closeOnOutsideClick","type":{"name":"boolean"},"isRequired":false,"description":"Whether to close when the area outside (the backdrop) is clicked","tags":{"defaultValue":{"name":"defaultValue","value":"true"}},"defaultValue":"true","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">true</span>"},{"name":"destinationElementId","type":{"name":"string"},"isRequired":false,"description":"The destination where the overlay will be inserted, defaults to\n`document.body`","tags":{"defaultValue":{"name":"defaultValue","value":"undefined"}},"defaultValue":"undefined","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">undefined</span>"},{"name":"didClose","type":{"name":"() => void"},"isRequired":false,"description":"A function that will be called when closing is finished executing, this\nincludes waiting for animations/transitions to finish.","tags":{},"highlightedType":"() => <span class=\"hljs-built_in\">void</span>"},{"name":"disableBackdrop","type":{"name":"boolean"},"isRequired":false,"description":"Whether to hide the backdrop or not","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"disableFocusTrap","type":{"name":"boolean"},"isRequired":false,"description":"Whether the focus trap is disabled or not","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"disableTransitions","type":{"name":"boolean"},"isRequired":false,"description":"Disable css transitions","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"focusTrapOptions","type":{"name":"unknown"},"isRequired":false,"description":"Focus trap options","tags":{"defaultValue":{"name":"defaultValue","value":"{ allowOutsideClick: true }"}},"defaultValue":"{ allowOutsideClick: true }","highlightedType":"unknown","highlightedDefaultValue":"{ <span class=\"hljs-attr\">allowOutsideClick</span>: <span class=\"hljs-literal\">true</span> }"},{"name":"isCentered","type":{"name":"boolean"},"isRequired":false,"description":"If set to true, the modal will be vertically centered","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"onClose","type":{"name":"() => void"},"isRequired":false,"description":"A function that will be called when closed","tags":{},"highlightedType":"() => <span class=\"hljs-built_in\">void</span>"},{"name":"onOpen","type":{"name":"() => void"},"isRequired":false,"description":"A function that will be called when opened","tags":{},"highlightedType":"() => <span class=\"hljs-built_in\">void</span>"},{"name":"renderInPlace","type":{"name":"boolean"},"isRequired":false,"description":"Whether to render in place or in the specified/default destination","tags":{"defaultValue":{"name":"defaultValue","value":"false"}},"defaultValue":"false","highlightedType":"<span class=\"hljs-built_in\">boolean</span>","highlightedDefaultValue":"<span class=\"hljs-literal\">false</span>"},{"name":"size","type":{"name":"enum","raw":"\"xs\" | \"sm\" | \"lg\" | \"xl\" | \"md\" | \"full\"","options":["'xs'","'sm'","'lg'","'xl'","'md'","'full'"]},"isRequired":false,"description":"The Modal size.","tags":{"defaultValue":{"name":"defaultValue","value":"'lg'"}},"defaultValue":"'lg'","highlightedType":"<span class=\"hljs-string\">'xs'</span> | <span class=\"hljs-string\">'sm'</span> | <span class=\"hljs-string\">'lg'</span> | <span class=\"hljs-string\">'xl'</span> | <span class=\"hljs-string\">'md'</span> | <span class=\"hljs-string\">'full'</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'lg'</span>"},{"name":"transitionDuration","type":{"name":"number"},"isRequired":false,"description":"Duration of the animation","tags":{"defaultValue":{"name":"defaultValue","value":"200"}},"defaultValue":"200","highlightedType":"<span class=\"hljs-built_in\">number</span>","highlightedDefaultValue":"<span class=\"hljs-number\">200</span>"},{"name":"transitionName","type":{"name":"string"},"isRequired":false,"description":"The name of the transition to be used in the modal.","tags":{"defaultValue":{"name":"defaultValue","value":"'overlay-transition--zoom'"}},"defaultValue":"'overlay-transition--zoom'","highlightedType":"<span class=\"hljs-built_in\">string</span>","highlightedDefaultValue":"<span class=\"hljs-string\">'overlay-transition--zoom'</span>"}],"description":"","tags":{}},{"name":"ChangesetFormFieldsBase","fileName":"packages/changeset-form/addon/components/changeset-form/fields/base.ts","args":[{"name":"changeset","type":{"name":"BufferedChangeset"},"isRequired":true,"description":"","tags":{},"highlightedType":"BufferedChangeset"},{"name":"fieldName","type":{"name":"string"},"isRequired":true,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"string[]"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>[]"}],"description":"","tags":{}},{"name":"ChangesetFormFieldsCheckboxGroup","fileName":"packages/changeset-form/addon/components/changeset-form/fields/checkbox-group.ts","args":[{"name":"changeset","type":{"name":"BufferedChangeset"},"isRequired":true,"description":"","tags":{},"highlightedType":"BufferedChangeset"},{"name":"errors","type":{"name":"string[]"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>[]"},{"name":"groupName","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"onChange","type":{"name":"(value: unknown, event: Event) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"}],"description":"","tags":{}},{"name":"ChangesetFormFieldsCheckbox","fileName":"packages/changeset-form/addon/components/changeset-form/fields/checkbox.ts","args":[{"name":"changeset","type":{"name":"BufferedChangeset"},"isRequired":true,"description":"","tags":{},"highlightedType":"BufferedChangeset"},{"name":"fieldName","type":{"name":"string"},"isRequired":true,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"string[]"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>[]"},{"name":"onChange","type":{"name":"(value: unknown, event: Event) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"_groupName","type":{"name":"string"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"_parentOnChange","type":{"name":"(value: unknown, event: Event) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"}],"description":"","tags":{}},{"name":"ChangesetFormFieldsInput","fileName":"packages/changeset-form/addon/components/changeset-form/fields/input.ts","args":[{"name":"changeset","type":{"name":"BufferedChangeset"},"isRequired":true,"description":"","tags":{},"highlightedType":"BufferedChangeset"},{"name":"fieldName","type":{"name":"string"},"isRequired":true,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"string[]"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>[]"},{"name":"onInput","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"}],"description":"","tags":{}},{"name":"ChangesetFormFieldsRadioGroup","fileName":"packages/changeset-form/addon/components/changeset-form/fields/radio-group.ts","args":[{"name":"changeset","type":{"name":"BufferedChangeset"},"isRequired":true,"description":"","tags":{},"highlightedType":"BufferedChangeset"},{"name":"fieldName","type":{"name":"string"},"isRequired":true,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"string[]"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>[]"},{"name":"onChange","type":{"name":"(value: unknown, event: Event) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"}],"description":"","tags":{}},{"name":"ChangesetFormFieldsRadio","fileName":"packages/changeset-form/addon/components/changeset-form/fields/radio.ts","args":[{"name":"changeset","type":{"name":"BufferedChangeset"},"isRequired":true,"description":"","tags":{},"highlightedType":"BufferedChangeset"},{"name":"fieldName","type":{"name":"string"},"isRequired":true,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"string[]"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>[]"},{"name":"onChange","type":{"name":"(value: unknown, event: Event) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: unknown, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"}],"description":"","tags":{}},{"name":"ChangesetFormFieldsSelect","fileName":"packages/changeset-form/addon/components/changeset-form/fields/select.ts","args":[{"name":"changeset","type":{"name":"BufferedChangeset"},"isRequired":true,"description":"","tags":{},"highlightedType":"BufferedChangeset"},{"name":"fieldName","type":{"name":"string"},"isRequired":true,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"string[]"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>[]"},{"name":"onChange","type":{"name":"(selection: unknown, select: Select, event?: Event) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(selection: unknown, <span class=\"hljs-attr\">select</span>: Select, event?: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"onClose","type":{"name":"(select: Select, event: Event) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(select: Select, <span class=\"hljs-attr\">event</span>: Event) => <span class=\"hljs-built_in\">void</span>"},{"name":"onFocusOut","type":{"name":"(select: Select, event: FocusEvent) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(select: Select, <span class=\"hljs-attr\">event</span>: FocusEvent) => <span class=\"hljs-built_in\">void</span>"}],"description":"","tags":{}},{"name":"ChangesetFormFieldsTextarea","fileName":"packages/changeset-form/addon/components/changeset-form/fields/textarea.ts","args":[{"name":"changeset","type":{"name":"BufferedChangeset"},"isRequired":true,"description":"","tags":{},"highlightedType":"BufferedChangeset"},{"name":"fieldName","type":{"name":"string"},"isRequired":true,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>"},{"name":"errors","type":{"name":"string[]"},"isRequired":false,"description":"","tags":{},"highlightedType":"<span class=\"hljs-built_in\">string</span>[]"},{"name":"onInput","type":{"name":"(value: string, event: InputEvent) => void"},"isRequired":false,"description":"","tags":{},"highlightedType":"(value: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">event</span>: InputEvent) => <span class=\"hljs-built_in\">void</span>"}],"description":"","tags":{}}];